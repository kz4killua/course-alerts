services:

  web:
    build: .
    env_file:
      - .env
    ports:
      - "127.0.0.1:${PORT}:${PORT}"
    command: /app/docker-entrypoint.sh
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost ${PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  celery:
    build: .
    command: celery -A config worker --loglevel=info --pool=gevent
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
    restart: unless-stopped

  celery_beat:
    build: .
    command: celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
    restart: unless-stopped
  
  redis:
    image: redis:7-alpine
    env_file:
      - .env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data: